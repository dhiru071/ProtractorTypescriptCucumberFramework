[
  {
    "keyword": "Feature",
    "name": "I am going to validate calculator",
    "line": 1,
    "id": "i-am-going-to-validate-calculator",
    "tags": [],
    "uri": "features\\demo.feature",
    "elements": [
      {
        "id": "i-am-going-to-validate-calculator;validate-add-functionality",
        "keyword": "Scenario",
        "line": 4,
        "name": "Validate add functionality",
        "tags": [
          {
            "name": "@calculatortesting",
            "line": 3
          }
        ],
        "type": "scenario",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed",
              "duration": 2000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 6,
            "name": "I will navigate to 'calc' website",
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed",
              "duration": 2597000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 7,
            "name": "I add two numbers \"3\" and \"5\"",
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed",
              "duration": 1099000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 8,
            "name": "Output displayed should be \"8\"",
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed",
              "duration": 2016000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed",
              "duration": 2000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ]
      },
      {
        "id": "i-am-going-to-validate-calculator;validate-add-functionality2",
        "keyword": "Scenario",
        "line": 11,
        "name": "Validate add functionality2",
        "tags": [
          {
            "name": "@calculatortesting",
            "line": 10
          }
        ],
        "type": "scenario",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed"
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 13,
            "name": "I will navigate to 'calc' website",
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed",
              "duration": 231000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 14,
            "name": "I add two numbers \"2\" and \"4\"",
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed",
              "duration": 332000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 15,
            "name": "Output displayed should be \"4\"",
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "failed",
              "duration": 1953000000,
              "error_message": "AssertionError\n    + expected - actual\n\n    -6\n    +4\n\n    at calc.getResult.getText.then (C:\\MyData\\My Study stuff\\Protractor\\ProtractorTypescriptCucumber\\stepDefinitions\\steps.ts:35:25)\n    at elementArrayFinder_.then (C:\\MyData\\My Study stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\protractor\\built\\element.js:804:32)\n    at ManagedPromise.invokeCallback_ (C:\\MyData\\My Study stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\selenium-webdriver\\lib\\promise.js:1376:14)\n    at TaskQueue.execute_ (C:\\MyData\\My Study stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\selenium-webdriver\\lib\\promise.js:3084:14)\n    at TaskQueue.executeNext_ (C:\\MyData\\My Study stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\selenium-webdriver\\lib\\promise.js:3067:27)\n    at asyncRun (C:\\MyData\\My Study stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\selenium-webdriver\\lib\\promise.js:2927:27)\n    at C:\\MyData\\My Study stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\selenium-webdriver\\lib\\promise.js:668:7\n    at process._tickCallback (internal/process/next_tick.js:68:7)"
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed",
              "duration": 300000000
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ]
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed"
            }
          }
        ]
      },
      {
        "id": "i-am-going-to-validate-calculator;validate-add-angular-website",
        "keyword": "Scenario",
        "line": 27,
        "name": "Validate add angular website",
        "tags": [
          {
            "name": "@angulartesting",
            "line": 17
          }
        ],
        "type": "scenario",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed"
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 20,
            "name": "I will navigate to 'angular' website",
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed",
              "duration": 3446000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 21,
            "name": "I clicked on header link",
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed",
              "duration": 2383000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 22,
            "name": "You will navigate to another page",
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 23,
            "name": "Enter 'hello' into search text field",
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed",
              "duration": 3300000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed",
              "duration": 6000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "match": {
              "location": "stuff\\Protractor\\ProtractorTypescriptCucumber\\node_modules\\cucumber\\lib\\support_code_library_builder\\build_helpers.js:173"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ]
      }
    ]
  }
]